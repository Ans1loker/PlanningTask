{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grish\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\smarttask-planner\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskPlanner from './TaskPlanner';\nimport Dashboard from './Dashboard';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { CssBaseline, Button } from '@mui/material';\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [themeMode, setThemeMode] = useState('light');\n  const theme = createTheme({\n    palette: {\n      mode: themeMode\n    }\n  });\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleTaskUpdate = updatedTasks => {\n    setTasks(updatedTasks);\n  };\n  const toggleTheme = () => {\n    setThemeMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, themeMode === 'light' ? 'Switch to Dark Theme' : 'Switch to Light Theme'), /*#__PURE__*/React.createElement(TaskPlanner, {\n    tasks: tasks,\n    onTaskUpdate: handleTaskUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dashboard, {\n    tasks: tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","TaskPlanner","Dashboard","createTheme","ThemeProvider","CssBaseline","Button","App","tasks","setTasks","themeMode","setThemeMode","theme","palette","mode","fetchTasks","response","get","data","error","console","handleTaskUpdate","updatedTasks","toggleTheme","prevMode","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onTaskUpdate"],"sources":["C:/Users/grish/OneDrive/Masaüstü/smarttask-planner/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TaskPlanner from './TaskPlanner';\r\nimport Dashboard from './Dashboard';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { CssBaseline, Button } from '@mui/material';\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [themeMode, setThemeMode] = useState('light');\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: themeMode,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/api/tasks');\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleTaskUpdate = (updatedTasks) => {\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setThemeMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div className=\"container\">\r\n        <Button onClick={toggleTheme}>\r\n          {themeMode === 'light' ? 'Switch to Dark Theme' : 'Switch to Light Theme'}\r\n        </Button>\r\n        <TaskPlanner tasks={tasks} onTaskUpdate={handleTaskUpdate} />\r\n        <Dashboard tasks={tasks} />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,EAAEC,MAAM,QAAQ,eAAe;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAEnD,MAAMc,KAAK,GAAGT,WAAW,CAAC;IACxBU,OAAO,EAAE;MACPC,IAAI,EAAEJ;IACR;EACF,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,iCAAiC,CAAC;QACnER,QAAQ,CAACO,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAIC,YAAY,IAAK;IACzCb,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBZ,YAAY,CAAEa,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACvE,CAAC;EAED,oBACE3B,KAAA,CAAA4B,aAAA,CAACrB,aAAa;IAACQ,KAAK,EAAEA,KAAM;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BlC,KAAA,CAAA4B,aAAA,CAACpB,WAAW;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACflC,KAAA,CAAA4B,aAAA;IAAKO,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBlC,KAAA,CAAA4B,aAAA,CAACnB,MAAM;IAAC2B,OAAO,EAAEV,WAAY;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BrB,SAAS,KAAK,OAAO,GAAG,sBAAsB,GAAG,uBAC5C,CAAC,eACTb,KAAA,CAAA4B,aAAA,CAACxB,WAAW;IAACO,KAAK,EAAEA,KAAM;IAAC0B,YAAY,EAAEb,gBAAiB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7DlC,KAAA,CAAA4B,aAAA,CAACvB,SAAS;IAACM,KAAK,EAAEA,KAAM;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CACQ,CAAC;AAEpB,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}